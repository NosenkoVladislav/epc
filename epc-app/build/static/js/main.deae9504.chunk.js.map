{"version":3,"sources":["services/apiService.js","components/user-item/user-item.js","components/modal/modal-input.js","components/btn/btn.js","components/modal/modal.js","App.js","index.js"],"names":["ApiService","_apiUrl","fetch","this","res","ok","Error","status","json","body","console","log","data","uuid","method","headers","JSON","stringify","UserItem","user","setModalShow","index","name","location","draggableId","login","provided","snapshot","ListGroupItem","className","isDragging","onClick","ref","innerRef","draggableProps","dragHandleProps","first","last","country","ModalInput","value","onInputChange","InputGroup","FormControl","onChange","e","Btn","handler","handleValue","type","child","Button","variant","InfoModal","hideModal","handleData","useState","firstName","lastName","phone","email","username","password","userData","setData","usersApi","confirmModal","setConfirmModal","target","state","handleSave","a","editUser","handleDelete","deleteUser","Modal","onHide","show","Header","closeButton","Title","Body","Footer","src","picture","large","alt","defaultProps","App","users","setUsers","modalState","setModalState","useEffect","getAllUsers","then","onDragEnd","destination","source","droppableId","selectedUser","splice","ListGroup","droppableProps","map","key","isModalOpen","placeholder","ReactDOM","render","document","getElementById"],"mappings":"gSAAqBA,E,iDACnBC,QAAU,+B,qMAIYC,MAAMC,KAAKF,S,WAAvBG,E,QACGC,G,sBACD,IAAIC,MAAJ,wBACaH,KAAKF,QADlB,sBACuCG,EAAIG,S,uBAGhCH,EAAII,O,cAAjBC,E,yBACCA,G,kCAEPC,QAAQC,IAAI,oB,wLAIDC,EAAMC,G,0FAEXX,MAAMC,KAAKF,QAAUY,EAAM,CAC/BC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BN,KAAMO,KAAKC,UAAUL,K,sDAGvBF,QAAQC,IAAI,yB,2LAICE,G,0FAEPX,MAAMC,KAAKF,QAAUY,EAAM,CAC/BC,OAAQ,W,sDAGVJ,QAAQC,IAAI,sB,sJCNHO,EA1BE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC9BC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SACd,OACE,kBAAC,IAAD,CAAWC,YAAaL,EAAKM,MAAMZ,KAAMQ,MAAOA,IAC7C,SAACK,EAAUC,GAAX,OACC,kBAACC,EAAA,EAAD,eACEC,UAAS,oBAAeF,EAASG,WAAa,WAAa,IAC3DC,QAAS,WACPX,EAAaD,IAEfa,IAAKN,EAASO,UACVP,EAASQ,eACTR,EAASS,iBAEb,yBAAKN,UAAU,aACb,yBAAKA,UAAU,oBAAf,UACMP,EAAKc,MADX,YACoBd,EAAKe,KADzB,MAGA,yBAAKR,UAAU,yBAAyBN,EAASe,e,wCCL9CC,EAdI,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOlB,EAA0B,EAA1BA,KAAMmB,EAAoB,EAApBA,cACjC,OACE,kBAACC,EAAA,EAAD,CAAYb,UAAU,QACpB,kBAACc,EAAA,EAAD,CACErB,KAAMA,EACNkB,MAAOA,EACPI,SAAU,SAACC,GACTJ,EAAcnB,EAAMuB,Q,QCCfC,EARH,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzC,OACE,kBAACC,EAAA,EAAD,CAAQC,QAASH,EAAMlB,QAAS,kBAAMgB,EAAQC,KAC3CE,ICCDG,EAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWnC,EAAuB,EAAvBA,KAAMoC,EAAiB,EAAjBA,WAAiB,EACzBC,mBAAS,CACnCC,UAAWtC,EAAKG,KAAKc,MACrBsB,SAAUvC,EAAKG,KAAKe,KACpBsB,MAAOxC,EAAKwC,MACZC,MAAOzC,EAAKyC,MACZtB,QAASnB,EAAKI,SAASe,QACvBuB,SAAU1C,EAAKM,MAAMoC,SACrBC,SAAU3C,EAAKM,MAAMqC,WAR8B,mBAC9CC,EAD8C,KACpCC,EADoC,KAYnDP,EAOEM,EAPFN,UACAC,EAMEK,EANFL,SACAC,EAKEI,EALFJ,MACAC,EAIEG,EAJFH,MACAtB,EAGEyB,EAHFzB,QACAuB,EAEEE,EAFFF,SACAC,EACEC,EADFD,SAEIG,EAAW,IAAIjE,EApBgC,EAsBbwD,oBAAS,GAtBI,mBAsB9CU,EAtB8C,KAsBhCC,EAtBgC,KAwB/C1B,EAAgB,SAACnB,EAAD,OAAS8C,EAAT,EAASA,OAAT,OACpBJ,GAAQ,SAACK,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyB/C,EAAO8C,EAAO5B,YAE3C8B,EAAU,uCAAG,sBAAAC,EAAA,sEACXN,EAASO,SAAST,EAAU5C,EAAKM,MAAMZ,MAD5B,uBAEX0C,IAFW,OAGjBD,EAAU,MAHO,2CAAH,qDAMVmB,EAAY,uCAAG,sBAAAF,EAAA,sEACbN,EAASS,WAAWvD,EAAKM,MAAMZ,MADlB,uBAEb0C,IAFa,OAGnBY,GAAgB,GAChBb,EAAU,MAJS,2CAAH,qDAOlB,OACE,kBAAC,WAAD,KACGY,EACC,kBAACS,EAAA,EAAD,CACEC,OAAQ,kBAAMT,GAAgB,IAC9BtC,UAAU,gBACVgD,MAAM,GAEN,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,qBAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,yBAAKpD,UAAU,cAAf,0CAIF,kBAAC8C,EAAA,EAAMO,OAAP,KACE,yBAAKrD,UAAU,sBACb,kBAAC,EAAD,CACEoB,KAAM,YACNF,QAASoB,EACTnB,aAAa,EACbE,MAAO,OAET,kBAAC,EAAD,CACED,KAAM,SACNF,QAAS0B,EACTzB,YAAa,KACbE,MAAO,WAMf,kBAACyB,EAAA,EAAD,CACEE,OAAQ1D,EACRyD,OAAQ,kBAAMtB,EAAU,OACxBzB,UAAU,mBAEV,kBAAC8C,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,mBAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,yBAAKpD,UAAU,sCACb,yBAAKsD,IAAKhE,EAAKiE,QAAQC,MAAOC,IAAI,MAEpC,yBAAKzD,UAAU,oCACb,kBAAC,EAAD,CACEP,KAAM,YACNkB,MAAOiB,EACPhB,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,KAAM,WACNkB,MAAOkB,EACPjB,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,KAAM,QACNkB,MAAOmB,EACPlB,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,KAAM,UACNkB,MAAOF,EACPG,cAAeA,KAGnB,yBAAKZ,UAAU,iBACb,kBAAC,EAAD,CACEP,KAAM,QACNkB,MAAOoB,EACPnB,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,KAAM,WACNkB,MAAOqB,EACPpB,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,KAAM,WACNkB,MAAOsB,EACPrB,cAAeA,MAIrB,kBAACkC,EAAA,EAAMO,OAAP,KACE,yBAAKrD,UAAU,sBACb,kBAAC,EAAD,CACEoB,KAAM,SACNF,QAASoB,EACTnB,aAAa,EACbE,MAAO,YAGX,yBAAKrB,UAAU,sBACb,kBAAC,EAAD,CACEoB,KAAM,YACNF,QAASO,EACTN,YAAa,KACbE,MAAO,UAET,kBAAC,EAAD,CACED,KAAM,UACNF,QAASuB,EACTtB,YAAa,KACbE,MAAO,sBAgBvBG,EAAUkC,aAAe,CACvBpE,KAAM,MAGOkC,QCrGAmC,EAhEH,WAAO,IAAD,EACUhC,mBAAS,IADnB,mBACTiC,EADS,KACFC,EADE,OAEoBlC,mBAAS,MAF7B,mBAETmC,EAFS,KAEGC,EAFH,KAGV3B,EAAW,IAAIjE,EAErB6F,qBAAU,WACRtC,MACC,IAEH,IAAMA,EAAa,kBACjBU,EAAS6B,cAAcC,MAAK,SAACnF,GAC3B8E,EAAS9E,OAiBb,OACE,yBAAKiB,UAAU,OACb,kBAAC,IAAD,CAAiBmE,UAhBH,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAChC,GAAKD,IAEHA,EAAY5E,QAAU6E,EAAO7E,OAC7B4E,EAAYE,cAAgBD,EAAOC,aAFrC,CAMA,IAAMC,EAAeX,EAAMS,EAAO7E,OAClCoE,EAAMY,OAAOH,EAAO7E,MAAO,GAC3BoE,EAAMY,OAAOJ,EAAY5E,MAAO,EAAG+E,GACnCV,EAASD,MAML,kBAAC,IAAD,CAAWU,YAAY,cACpB,SAACzE,GAAD,OACC,kBAAC4E,EAAA,EAAD,eACEzE,UAAU,QACNH,EAAS6E,eAFf,CAGEvE,IAAKN,EAASO,WAEbwD,EAAMe,KAAI,SAACrF,EAAME,GAAP,OACT,kBAAC,EAAD,CACEoF,IAAKtF,EAAKM,MAAMZ,KAChBM,KAAMA,EACNuF,YAAaf,EACbvE,aAAcwE,EACdvE,MAAOA,OAGVK,EAASiF,iBAKjBhB,EACC,kBAAC,EAAD,CACExE,KAAMwE,EACNrC,UAAWsC,EACXF,SAAUA,EACVnC,WAAYA,IAEZ,OC7DVqD,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.deae9504.chunk.js","sourcesContent":["export default class ApiService {\n  _apiUrl = \"http://localhost:3000/users/\";\n\n  async getAllUsers() {\n    try {\n      const res = await fetch(this._apiUrl);\n      if (!res.ok) {\n        throw new Error(\n          `Could not get ${this._apiUrl}, received ${res.status}`\n        );\n      }\n      const body = await res.json();\n      return body;\n    } catch (e) {\n      console.log(\"Cannot get users\");\n    }\n  }\n\n  async editUser(data, uuid) {\n    try {\n      await fetch(this._apiUrl + uuid, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n    } catch (e) {\n      console.log(\"Cannot edit user data\");\n    }\n  }\n\n  async deleteUser(uuid) {\n    try {\n      await fetch(this._apiUrl + uuid, {\n        method: \"DELETE\",\n      });\n    } catch (e) {\n      console.log(\"Cannot delete user\");\n    }\n  }\n}\n","import React from \"react\";\nimport { ListGroupItem } from \"react-bootstrap\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst UserItem = ({ user, setModalShow, index }) => {\n  const { name, location } = user;\n  return (\n    <Draggable draggableId={user.login.uuid} index={index}>\n      {(provided, snapshot) => (\n        <ListGroupItem\n          className={`list-item ${snapshot.isDragging ? \"dragging\" : \"\"}`}\n          onClick={() => {\n            setModalShow(user);\n          }}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"item-info\">\n            <div className=\"item-info__block\">\n              {`${name.first} ${name.last} `}\n            </div>\n            <div className=\"item-info__block __sm\">{location.country}</div>\n          </div>\n        </ListGroupItem>\n      )}\n    </Draggable>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\n\nconst ModalInput = ({ value, name, onInputChange }) => {\n  return (\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        name={name}\n        value={value}\n        onChange={(e) => {\n          onInputChange(name, e);\n        }}\n      />\n    </InputGroup>\n  );\n};\n\nexport default ModalInput;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Btn = ({ handler, handleValue, type, child }) => {\n  return (\n    <Button variant={type} onClick={() => handler(handleValue)}>\n      {child}\n    </Button>\n  );\n};\n\nexport default Btn;\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal } from \"react-bootstrap\";\nimport ModalInput from \"./modal-input\";\nimport ApiService from \"../../services/apiService\";\nimport Btn from \"../btn/btn\";\n\nconst InfoModal = ({ hideModal, user, handleData }) => {\n  const [userData, setData] = useState({\n    firstName: user.name.first,\n    lastName: user.name.last,\n    phone: user.phone,\n    email: user.email,\n    country: user.location.country,\n    username: user.login.username,\n    password: user.login.password,\n  });\n\n  const {\n    firstName,\n    lastName,\n    phone,\n    email,\n    country,\n    username,\n    password,\n  } = userData;\n  const usersApi = new ApiService();\n\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  const onInputChange = (name, { target }) =>\n    setData((state) => ({ ...state, [name]: target.value }));\n\n  const handleSave = async () => {\n    await usersApi.editUser(userData, user.login.uuid);\n    await handleData();\n    hideModal(null);\n  };\n\n  const handleDelete = async () => {\n    await usersApi.deleteUser(user.login.uuid);\n    await handleData();\n    setConfirmModal(false);\n    hideModal(null);\n  };\n\n  return (\n    <Fragment>\n      {confirmModal ? (\n        <Modal\n          onHide={() => setConfirmModal(false)}\n          className=\"confirm-modal\"\n          show={true}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Delete User</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-text\">\n              Are you sure you want to delete user?\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className=\"modal-button-group\">\n              <Btn\n                type={\"secondary\"}\n                handler={setConfirmModal}\n                handleValue={false}\n                child={\"No\"}\n              />\n              <Btn\n                type={\"danger\"}\n                handler={handleDelete}\n                handleValue={null}\n                child={\"Yes\"}\n              />\n            </div>\n          </Modal.Footer>\n        </Modal>\n      ) : (\n        <Modal\n          show={!!user}\n          onHide={() => hideModal(null)}\n          className=\"user-info-modal\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>User Info</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-section modal-section__image\">\n              <img src={user.picture.large} alt=\"\" />\n            </div>\n            <div className=\"modal-section modal-section__top\">\n              <ModalInput\n                name={\"firstName\"}\n                value={firstName}\n                onInputChange={onInputChange}\n              />\n              <ModalInput\n                name={\"lastName\"}\n                value={lastName}\n                onInputChange={onInputChange}\n              />\n              <ModalInput\n                name={\"phone\"}\n                value={phone}\n                onInputChange={onInputChange}\n              />\n              <ModalInput\n                name={\"country\"}\n                value={country}\n                onInputChange={onInputChange}\n              />\n            </div>\n            <div className=\"modal-section\">\n              <ModalInput\n                name={\"email\"}\n                value={email}\n                onInputChange={onInputChange}\n              />\n              <ModalInput\n                name={\"username\"}\n                value={username}\n                onInputChange={onInputChange}\n              />\n              <ModalInput\n                name={\"password\"}\n                value={password}\n                onInputChange={onInputChange}\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className=\"modal-button-group\">\n              <Btn\n                type={\"danger\"}\n                handler={setConfirmModal}\n                handleValue={true}\n                child={\"Delete\"}\n              />\n            </div>\n            <div className=\"modal-button-group\">\n              <Btn\n                type={\"secondary\"}\n                handler={hideModal}\n                handleValue={null}\n                child={\"Close\"}\n              />\n              <Btn\n                type={\"primary\"}\n                handler={handleSave}\n                handleValue={null}\n                child={\"Save Changes\"}\n              />\n            </div>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nInfoModal.propTypes = {\n  user: PropTypes.object,\n  hideModal: PropTypes.func,\n  handleData: PropTypes.func,\n};\n\nInfoModal.defaultProps = {\n  user: null,\n};\n\nexport default InfoModal;\n","import React, { useState, useEffect } from \"react\";\nimport ApiService from \"./services/apiService\";\nimport { ListGroup } from \"react-bootstrap\";\nimport \"./App.scss\";\nimport UserItem from \"./components/user-item/user-item\";\nimport InfoModal from \"./components/modal/modal\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [modalState, setModalState] = useState(null);\n  const usersApi = new ApiService();\n\n  useEffect(() => {\n    handleData();\n  }, []);\n\n  const handleData = () =>\n    usersApi.getAllUsers().then((data) => {\n      setUsers(data);\n    });\n\n  const onDragEnd = ({ destination, source }) => {\n    if (!destination) return;\n    if (\n      destination.index === source.index &&\n      destination.droppableId === source.droppableId\n    )\n      return;\n\n    const selectedUser = users[source.index];\n    users.splice(source.index, 1);\n    users.splice(destination.index, 0, selectedUser);\n    setUsers(users);\n  };\n\n  return (\n    <div className=\"App\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided) => (\n            <ListGroup\n              className=\"list\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {users.map((user, index) => (\n                <UserItem\n                  key={user.login.uuid}\n                  user={user}\n                  isModalOpen={modalState}\n                  setModalShow={setModalState}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n            </ListGroup>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {modalState ? (\n        <InfoModal\n          user={modalState}\n          hideModal={setModalState}\n          setUsers={setUsers}\n          handleData={handleData}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  /*<React.StrictMode>*/\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}